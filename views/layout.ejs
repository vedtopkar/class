<!DOCTYPE html>
<html lang="en">
  <head>

    <meta charset="utf-8">
    <meta name="description" content="An easy to use application to help DLP teachers teach CS in the classroom">
    <meta name="author" content="Ved Topkar">

    <title><%- title %></title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `link` tags, or asynchronously
        on the client using a solution like AMD (RequireJS).  Or, if you like, you can
        take advantage of Sails' boilerplate asset management.

        By default, stylesheets from your `assets/linker/styles` folder are included
        here automatically.  Both CSS (.css) and LESS (.less) are supported.
        In production, your styles will be minified and concatenated into a single file.
        
        To customize any part of the built-in behavior, just edit your Gruntfile.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/linker/styles/admin.css">
    <link rel="stylesheet" href="/linker/styles/bootstrap-theme.min.css">
    <link rel="stylesheet" href="/linker/styles/bootstrap.min.css">
    <link rel="stylesheet" href="/linker/styles/class.css">
    <link rel="stylesheet" href="/linker/styles/font-awesome.min.css">
    <!--STYLES END-->
  </head>

  <body>
    <div id="wrapper">

      <!-- Sidebar -->
      <nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-ex1-collapse">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="/">DLP &lt;Class&gt;</a>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse navbar-ex1-collapse">
          <ul class="nav navbar-nav navbar-right navbar-user">
            <% if(req.session.user){%>
              <li class="dropdown user-dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="fa fa-user"> <%= req.session.user.username %></i><b class="caret"></b></a>
                <ul class="dropdown-menu">
                  <li><a href="#"><i class="fa fa-user"></i> Profile</a></li>
                  <li><a href="#"><i class="fa fa-envelope"></i> Inbox <span class="badge">7</span></a></li>
                  <li><a href="/user/<%= req.session.user.id %>/settings"><i class="fa fa-gear"></i> Settings</a></li>
                  <li class="divider"></li>
                  <li><a href="/logout"><i class="fa fa-power-off"></i> Log Out</a></li>
                </ul>
              </li>
            <%} else {%>
              <li>
                <a href="/login" class="navbar-link">Login</a>
              </li>
            <%}%>
            
          </ul>
        </div><!-- /.navbar-collapse -->
      </nav>

      <div id="page-wrapper">


        

      <%- body %>

        

      </div><!-- /#page-wrapper -->

    </div><!-- /#wrapper -->



    <!--
        Client-side Templates
        ========================

    		HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/linker/templates` folder, then
        include them here automatically.
        
        To customize this behavior to fit your needs, just edit your Gruntfile.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your templates using a server-side stringfile
              before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' boilerplate asset management.

      By default, filesin your `assets/linker/js` folder are included here
      automatically.  Both JavaScript (.js) and CoffeeScript (.coffee) are supported.
      In production, your scripts will be minified and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit your Gruntfile.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/linker/js/socket.io.js"></script>
    <script src="/linker/js/sails.io.js"></script>
    <script src="/linker/js/app.js"></script>
    <script src="/linker/js/angular-app.js"></script>
    <script src="/linker/js/vendor/angular.min.js"></script>
    <script src="/linker/js/vendor/bootstrap.min.js"></script>
    <script src="/linker/js/vendor/jquery-1.11.1.min.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
